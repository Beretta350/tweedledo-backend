// Code generated by MockGen. DO NOT EDIT.
// Source: D:\Projects\tweedledo-backend\core\ports\tasklist_ports.go

// Package mocks is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/tweedledo/core/domain"
)

// MockTaskListServiceInterface is a mock of TaskListServiceInterface interface.
type MockTaskListServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTaskListServiceInterfaceMockRecorder
}

// MockTaskListServiceInterfaceMockRecorder is the mock recorder for MockTaskListServiceInterface.
type MockTaskListServiceInterfaceMockRecorder struct {
	mock *MockTaskListServiceInterface
}

// NewMockTaskListServiceInterface creates a new mock instance.
func NewMockTaskListServiceInterface(ctrl *gomock.Controller) *MockTaskListServiceInterface {
	mock := &MockTaskListServiceInterface{ctrl: ctrl}
	mock.recorder = &MockTaskListServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskListServiceInterface) EXPECT() *MockTaskListServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateTaskList mocks base method.
func (m *MockTaskListServiceInterface) CreateTaskList(name string) (*domain.TaskList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTaskList", name)
	ret0, _ := ret[0].(*domain.TaskList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTaskList indicates an expected call of CreateTaskList.
func (mr *MockTaskListServiceInterfaceMockRecorder) CreateTaskList(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTaskList", reflect.TypeOf((*MockTaskListServiceInterface)(nil).CreateTaskList), name)
}

// GetAllTaskList mocks base method.
func (m *MockTaskListServiceInterface) GetAllTaskList() ([]*domain.TaskList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTaskList")
	ret0, _ := ret[0].([]*domain.TaskList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTaskList indicates an expected call of GetAllTaskList.
func (mr *MockTaskListServiceInterfaceMockRecorder) GetAllTaskList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTaskList", reflect.TypeOf((*MockTaskListServiceInterface)(nil).GetAllTaskList))
}

// GetTaskListById mocks base method.
func (m *MockTaskListServiceInterface) GetTaskListById(tasklistId string) (*domain.TaskList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskListById", tasklistId)
	ret0, _ := ret[0].(*domain.TaskList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTaskListById indicates an expected call of GetTaskListById.
func (mr *MockTaskListServiceInterfaceMockRecorder) GetTaskListById(tasklistId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskListById", reflect.TypeOf((*MockTaskListServiceInterface)(nil).GetTaskListById), tasklistId)
}

// MockTaskListRepositoryInterface is a mock of TaskListRepositoryInterface interface.
type MockTaskListRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTaskListRepositoryInterfaceMockRecorder
}

// MockTaskListRepositoryInterfaceMockRecorder is the mock recorder for MockTaskListRepositoryInterface.
type MockTaskListRepositoryInterfaceMockRecorder struct {
	mock *MockTaskListRepositoryInterface
}

// NewMockTaskListRepositoryInterface creates a new mock instance.
func NewMockTaskListRepositoryInterface(ctrl *gomock.Controller) *MockTaskListRepositoryInterface {
	mock := &MockTaskListRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockTaskListRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskListRepositoryInterface) EXPECT() *MockTaskListRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateTaskList mocks base method.
func (m *MockTaskListRepositoryInterface) CreateTaskList(t *domain.TaskList) (*domain.TaskList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTaskList", t)
	ret0, _ := ret[0].(*domain.TaskList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTaskList indicates an expected call of CreateTaskList.
func (mr *MockTaskListRepositoryInterfaceMockRecorder) CreateTaskList(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTaskList", reflect.TypeOf((*MockTaskListRepositoryInterface)(nil).CreateTaskList), t)
}

// DeleteTaskList mocks base method.
func (m *MockTaskListRepositoryInterface) DeleteTaskList(t *domain.TaskList) (*domain.TaskList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTaskList", t)
	ret0, _ := ret[0].(*domain.TaskList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTaskList indicates an expected call of DeleteTaskList.
func (mr *MockTaskListRepositoryInterfaceMockRecorder) DeleteTaskList(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTaskList", reflect.TypeOf((*MockTaskListRepositoryInterface)(nil).DeleteTaskList), t)
}

// GetAllTaskLists mocks base method.
func (m *MockTaskListRepositoryInterface) GetAllTaskLists() ([]*domain.TaskList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTaskLists")
	ret0, _ := ret[0].([]*domain.TaskList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTaskLists indicates an expected call of GetAllTaskLists.
func (mr *MockTaskListRepositoryInterfaceMockRecorder) GetAllTaskLists() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTaskLists", reflect.TypeOf((*MockTaskListRepositoryInterface)(nil).GetAllTaskLists))
}

// GetTaskListById mocks base method.
func (m *MockTaskListRepositoryInterface) GetTaskListById(id string) (*domain.TaskList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskListById", id)
	ret0, _ := ret[0].(*domain.TaskList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTaskListById indicates an expected call of GetTaskListById.
func (mr *MockTaskListRepositoryInterfaceMockRecorder) GetTaskListById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskListById", reflect.TypeOf((*MockTaskListRepositoryInterface)(nil).GetTaskListById), id)
}

// UpdateTaskList mocks base method.
func (m *MockTaskListRepositoryInterface) UpdateTaskList(t *domain.TaskList) (*domain.TaskList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTaskList", t)
	ret0, _ := ret[0].(*domain.TaskList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTaskList indicates an expected call of UpdateTaskList.
func (mr *MockTaskListRepositoryInterfaceMockRecorder) UpdateTaskList(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTaskList", reflect.TypeOf((*MockTaskListRepositoryInterface)(nil).UpdateTaskList), t)
}
